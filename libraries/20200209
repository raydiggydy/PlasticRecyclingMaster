import java.sql.Connection
import java.sql.DriverManager
import java.sql.ResultSet
import java.sql.SQLException

fun main() {
    val conn = connect("1.168.0.53:60000")
    //테이블 이름
    val table_name = "Accounts_a"
    //열 이름
    val columns= arrayOf("ID", "PASSWORD", "EMAIL")
    //자료형 이름
    val datatypes = arrayOf("NVARCHAR(255)","NVARCHAR(255)","NVARCHAR(255)")
    //제한자
    val constraints = arrayOf("PRIMARY KEY","NOT NULL","NOT NULL UNIQUE")
    if (conn != null){
        drop(conn,table_name)
        create(conn,table_name,columns,datatypes, constraints)
        insert (conn,table_name, arrayOf("seoyoung", "chloe1129", "raydiggydy@gmail.com"))
        read(conn, table_name, "WHERE ID = 'seoyoung'")
        update(conn, table_name, "EMAIL = 'AAA@gmail.com'", "ID = 'seoyoung'")
        delete(conn, table_name, "ID = 'seoyoung'")
    }
}
fun connect(server: String) : Connection? {
    val db = "raydb"
    val db_connect_string = "jdbc:sqlserver://$server;database=$db"
    val db_userid = "cit"
    val db_password = "citcitcit"
    var conn: Connection? = null

    try {
        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver")
        conn = DriverManager.getConnection(db_connect_string, db_userid, db_password)
        println("MS-SQL 서버연결에 성공했습니다")
    } catch(sqle:SQLException) {
        println("SQLException 오류: $sqle")
    } catch(cnfe: ClassNotFoundException){
        println("ClassNotFoundException 오류 : $cnfe")
    }

    return conn
}
/* CRUID
C:CREATE
R:READ
U:UPDATE
I:INSERT
D:DELETE
 */

fun delete(conn:Connection, tablename: String, where : String ) {
    var query = "DELETE FROM Accounts_a WHERE ID = 'seoyoung';"
    println(query)
    try{
        val statement = conn.createStatement()
        statement.execute(query)
        println("데이터 삭제 성공 : $tablename")
    }
    catch(sqle:SQLException){
        println("SQLException:$sqle")
    }

}
fun update(conn:Connection, tablename : String, set : String, where:String) {
    var query = "UPDATE $tablename SET $set WHERE $where"
    println(query)

    try{
        val statement = conn.createStatement()
        statement.execute(query)
        println("데이터 수정 성공 : $tablename")
    }
    catch(sqle:SQLException){
        println("SQLException:$sqle")
    }
}






fun insert(conn:Connection, tablename:String, values:Array<String>){
    // 'ray', 'hook', 'ray@gmail.com'
    var query = "INSERT INTO $tablename VALUES ("
    for (i in values.indices){
        query += "'"+values[i] + "', "
    }
    query = query.substring(0, query.length-2)+ ")"
    println(query)

    try{
        val statement =conn.createStatement()
        statement.execute(query)
        println("데이터 생성 성공 : $tablename")
    }
    catch(sqle:SQLException){
        println("SQLException : $sqle")
    }
}

fun drop(conn:Connection, tablename: String){
    val query = "DROP TABLE IF EXISTS $tablename"
    println(query)
    try{
        val statement = conn.createStatement()
        statement.execute(query)
        println("테이블 삭제 성공 : $tablename")
    } catch(sqle:SQLException) {
        println("SQLException : $sqle")
    }
}
fun read(conn:Connection,tablename : String, where:String){
    val query = "SELECT *FROM $tablename $where"
    println(query)
    val rs : ResultSet
    try {
        val statement = conn.createStatement()
        rs = statement.executeQuery(query)
        println("테이블 읽기 성공 : $tablename")
        while(rs.next()){
            println(rs.getString(2))
        }
    } catch (sqle: SQLException){
        println("SQLException : $sqle")
    }
}

fun create(conn:Connection, tablename: String, columns:Array<String>,datatypes:Array<String>,constraints: Array<String>){
    var query = "CREATE TABLE $tablename ("
    for (i in columns.indices){
        query += columns[i] +" " + datatypes[i] + " "+constraints[i]+", "
    }
    query = query.substring(0, query.length-2)+ ");"
    println(query)

    try {
        val statement = conn.createStatement()
        statement.execute(query)
        println("테이블 생성 성공 : $tablename")
    } catch(sqle: SQLException) {
        println("SQLException : $sqle")
    }
}
